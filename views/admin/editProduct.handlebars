<div class="content-wrapper">
    <div class="content">


        {{!-- Table Product --}}
        <div class="row">
            <div class="col-12">
                <div class="card card-default">
                    <div class="card-header">
                        <h2>Edit Product Information</h2>

                    </div>
                    <form action="/admin/editProductDB/{{product._id}}" method="POST" enctype="multipart/form-data">
                        <div class="card-body">
                            <div class="row">
                                {{!-- left column --}}
                                <div class="col-lg-8">
                                    <div class="form-group mb-5">
                                        <label for="title">Product Title</label>
                                        <input type="text" class="form-control" id="title" name="title"
                                            placeholder="Add Product" value="{{product.title}}">
                                    </div>
                                    <div class="form-group">
                                        <label for="brandLine">Brand Line</label>
                                        <select class="form-control" id="brandLine" name="brandLine">
                                            <option value="Commercial Concepts" {{#if (eq
                                                product.brandLine "Commercial Concepts" )}}selected{{/if}}>Commercial
                                                Concepts</option>
                                            <option value="OEI" {{#if (eq product.brandLine "OEI" )}}selected{{/if}}>OEI
                                            </option>
                                            <option value="Bay Products" {{#if (eq product.brandLine "Bay Products"
                                                )}}selected{{/if}}>Bay Products</option>
                                            <option value="Noona" {{#if (eq product.brandLine "Noona"
                                                )}}selected{{/if}}>Noona</option>
                                            <option value="KDOC Products" {{#if (eq product.brandLine "KDOC Products"
                                                )}}selected{{/if}}>KDOC Products</option>

                                        </select>
                                    </div>
                                    <div class="form-group">
                                        <label for="category">Product Category</label>
                                        <select class="form-control" id="category" name="category">
                                            <option value="">-- Select a Product Category --</option>

                                        </select>
                                    </div>
                                    <div class="form-group">
                                        <label for="subcategory">Product SubCategory</label>
                                        <select class="form-control" id="subcategory" name="subcategory">
                                            <option value="">-- Select a Product SubCategory --</option>
                                        </select>
                                    </div>
                                    <div class="form-group mb-5">
                                        <label for="details">Product Details</label>
                                        <input type="text" class="form-control" id="details" name="details"
                                            placeholder="Add Detail Line" value="{{product.details}}">
                                    </div>

                                    <div class="editor mb-5">
                                        <label class="d-block" for="colors">Colors</label>
                                        <textarea id="colors" name="colors" rows="6" cols="60"
                                            placeholder="Separate with comma: Red, Blue, Green"
                                            class="form-control">{{product.colors}}</textarea>
                                    </div>

                                    <div class="editor mb-5">
                                        <label class="d-block" for="dimensions">Dimensions</label>
                                        <textarea id="dimensions" name="dimensions" rows="6" cols="60"
                                            placeholder="25″W X 35.5″H X 24″D"
                                            class="form-control">{{product.dimensions}}</textarea>
                                    </div>

                                    <div class="product-type mb-3 ">
                                        <label class="d-block" for="productLine">Product Line</label>
                                        <div>
                                            <div class="custom-control custom-radio d-inline-block mr-3 mb-3">
                                                <input type="radio" id="none" name="productLine"
                                                    class="custom-control-input" value="none" {{#if (eq
                                                    product.productLine "none" )}}checked{{/if}}>
                                                <label class="custom-control-label" for="none">None</label>
                                            </div>

                                            <div class="custom-control custom-radio d-inline-block mr-3 mb-3">
                                                <input type="radio" id="signature" name="productLine"
                                                    class="custom-control-input" value="signature" {{#if (eq
                                                    product.productLine "signature" )}}checked{{/if}}>
                                                <label class="custom-control-label" for="signature">Signature</label>
                                            </div>

                                            <div class="custom-control custom-radio d-inline-block mr-3 mb-3">
                                                <input type="radio" id="director" name="productLine"
                                                    class="custom-control-input" value="director" {{#if (eq
                                                    product.productLine "director" )}}checked{{/if}}>
                                                <label class="custom-control-label" for="director">Director</label>
                                            </div>

                                            <div class="custom-control custom-radio d-inline-block mr-3 mb-3">
                                                <input type="radio" id="executive" name="productLine"
                                                    class="custom-control-input" value="executive" {{#if (eq
                                                    product.productLine "executive" )}}checked{{/if}}>
                                                <label class="custom-control-label" for="executive">Executive</label>
                                            </div>
                                        </div>

                                    </div>

                                    <div class="editor">
                                        <label class="d-block" for="description">Description &amp; Features</label>
                                        <textarea id="description" name="description" rows="6" cols="60"
                                            placeholder="Enter description and features here..."
                                            class="form-control">{{product.description}}</textarea>
                                    </div>
                                    <div class="form-check d-inline-block mr-3 mb-3 mt-3">
                                        <input name="visible" class="form-check-input" type="checkbox" id="showProduct"
                                            {{#if product.visible}}checked{{/if}}>
                                        <label class="form-check-label" for="showProduct">
                                            Show Product On Site
                                        </label>
                                    </div>


                                </div>
                                {{!-- right column --}}
                                <div class="col-lg-4">
                                    {{!-- existing images --}}
                                    <div id="saved-images" class="mt-3">
                                        <label>Saved Images</label>
                                        <div class="d-flex flex-wrap">
                                            {{#each product.images}}
                                                <div class="saved-image position-relative m-2"
                                                    style="display:inline-block;">
                                                    <img src='{{path}}'
                                                        style="max-width: 120px; border: 1px solid #ccc; border-radius: 4px;">
                                                    <button type="button"
                                                        class="btn btn-sm btn-danger remove-saved-image"
                                                        data-filename="{{fileName}}"
                                                        style="position:absolute; top:0; right:0;">&times;</button>
                                                    <!-- Keep for resaving -->
                                                    <input type="hidden" name="existingImages" value="{{fileName}}">
                                                </div>
                                            {{/each}}
                                        </div>
                                    </div>
                                    <hr>
                                    <!-- File Input for New Images -->
                                    <div class="custom-file mt-3">
                                        <input type="file" class="custom-file-input" id="imageFilesEdit"
                                            name="imageFiles" multiple>
                                        <label class="custom-file-label" for="imageFilesEdit">Choose images</label>
                                    </div>
                                    <hr class="mt-5">
                                    <div id="image-preview" style="margin-top: 10px;"></div>
                                </div>
                            </div>
                            <div class="row mt-5">
                                <div class="col-12">
                                    <div>
                                        <a href="/admin/products" class="btn btn-light btn-pill mr-1 mr-md-2">
                                            cancel </a>
                                        <button type="submit" class="btn btn-primary btn-pill">
                                            save </button>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </form>
                </div>
            </div>
        </div>

    </div>
</div>
<script>
    const currentCategory = "{{product.category}}";
    const currentSubcategory = "{{product.subcategory}}";

    document.addEventListener("DOMContentLoaded", function () {
        /** ================================
         * 1. Preview & Remove New Images
         * ================================= */
        const input = document.getElementById("imageFilesEdit");
        const preview = document.getElementById("image-preview");

        let newImageMap = new Map(); // Track files by name for removal

        input.addEventListener("change", function () {
            preview.innerHTML = "";
            newImageMap.clear();

            Array.from(input.files).forEach((file, index) => {
                if (!file.type.startsWith("image/")) return;

                const reader = new FileReader();
                reader.onload = function (e) {
                    const container = document.createElement("div");
                    container.classList.add("position-relative", "m-2", "d-inline-block");

                    const img = document.createElement("img");
                    img.src = e.target.result;
                    img.style.maxWidth = "120px";
                    img.style.border = "1px solid #ccc";
                    img.style.borderRadius = "4px";
                    img.style.display = "block";

                    const removeBtn = document.createElement("button");
                    removeBtn.type = "button";
                    removeBtn.innerHTML = "&times;";
                    removeBtn.classList.add("btn", "btn-sm", "btn-danger");
                    removeBtn.style.position = "absolute";
                    removeBtn.style.top = "0";
                    removeBtn.style.right = "0";
                    removeBtn.dataset.index = index;

                    removeBtn.addEventListener("click", () => {
                        container.remove();
                        newImageMap.set(index, null); // Mark for exclusion
                    });

                    container.appendChild(img);
                    container.appendChild(removeBtn);
                    preview.appendChild(container);

                    newImageMap.set(index, file);
                };
                reader.readAsDataURL(file);
            });
        });

        // Override form submit to exclude removed new files
        const form = document.querySelector("form");
        form.addEventListener("submit", function (e) {
            if (newImageMap.size === 0) return;

            const dt = new DataTransfer();

            newImageMap.forEach((file) => {
                if (file) dt.items.add(file);
            });

            input.files = dt.files;
        });


        /** ================================
         * 2. Handle Removing Saved Images
         * ================================= */
        const savedImagesContainer = document.getElementById("saved-images");

        savedImagesContainer?.addEventListener("click", function (e) {
            if (e.target.classList.contains("remove-saved-image")) {
                const imageDiv = e.target.closest(".saved-image");
                const filename = e.target.dataset.filename;

                // Remove the image visually
                imageDiv.remove();

                // Add hidden input to tell backend to delete this file
                const input = document.createElement("input");
                input.type = "hidden";
                input.name = "removedImages";
                input.value = filename;
                document.querySelector("form").appendChild(input);
            }
        });

        /** ========================================
         * 3. Populate Category/Subcategory Selects
         * ========================================= */
        const categorySelect = document.getElementById("category");
        const subcategorySelect = document.getElementById("subcategory");

        fetch("/data/categories.json")
            .then(response => response.json())
            .then(categories => {
                // Populate category dropdown
                categories.forEach(cat => {
                    const opt = document.createElement("option");
                    opt.value = cat.name;
                    opt.textContent = cat.name;
                    categorySelect.appendChild(opt);
                });

                // Populate subcategories
                function populateSubcategories(categoryName) {
                    const selected = categories.find(c => c.name === categoryName);

                    subcategorySelect.innerHTML = ' <option value="">-- Select Subcategory --</option>';

                    if (selected?.subcategories?.length) {
                        subcategorySelect.disabled = false;
                        selected.subcategories.forEach(sub => {
                            const subOpt = document.createElement("option");
                            subOpt.value = sub;
                            subOpt.textContent = sub;
                            subcategorySelect.appendChild(subOpt);
                        });
                    } else {
                        subcategorySelect.disabled = true;
                    }
                }

                // Update subcategories on change
                categorySelect.addEventListener("change", function () {
                    populateSubcategories(this.value);
                });

                // Auto-select current values
                if (currentCategory) {
                    categorySelect.value = currentCategory;
                    populateSubcategories(currentCategory);

                    if (currentSubcategory) {
                        subcategorySelect.value = currentSubcategory;
                    }
                } else {
                    subcategorySelect.disabled = true;
                }
            })
            .catch(err => {
                console.error("Failed to load categories:", err);
            });
    });
</script>